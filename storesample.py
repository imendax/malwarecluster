#!/usr/bin/python3

from cuckooanalysis import dispatchcuckoo
from auxiliary import pecheck, getdatabase
from extractattributes import extractstrings

def handlenonexe(documentsamples):
    """
    Store `strings` attributes of non-exe malware samples in shelve db

    Args:
        documentsamples:   absolute paths of all non-exe malware samples

    Raises:
    Returns:
        None
    """

    successcounter = 0

    # Get shelve database object
    db = getdatabase()

    for path in documentsamples:
        # Get malware sample's printable strings and store in dict
        db[path] = extractstrings(path)

        # Write data back to db
        db.sync()

        successcounter = successcounter + 1
        #print ("[*] Extracted {0} attributes from {1}".format(len(attributes), path))

    print("Extracted attributes for " + str(successcounter) + \
          " document type malware samples")

def handleexe(exesamples):
    """
    Dispatch exe samples to cuckoo for analysis and write successfull task ids
    to `taskids` file and error ids to `errorids` in the current directory

    Args:
        absolute paths of all exe malware samples

    Raises:
    Returns:
        None
    """

    # Dispatch exe samples for cuckoo analysis
    taskids, errorids = dispatchcuckoo(exesamples)

    if taskids:
        with open('taskids', 'w') as f:
            f.write(','.join(map(str, taskids)))

    if errorids:
        with open('errorids', 'w') as f:
            f.write(','.join(map(str, errorids)))

def store(malwarepaths):
    """
    Stores non-exe samples' `strings` into shelve db and dispatches exe samples
    to cuckoo for analysis

    Args:
        malwarepaths: absolute paths of all malware samples

    Raises:
    Returns:
        None
    """

    exesamples = []
    documentsamples = []

    # Separate EXE and non-EXE malware samples
    for sample in malwarepaths:
        if pecheck(sample):
            exesamples.append(sample)
        else:
            documentsamples.append(sample)

    # Store `strings` of non-exe samples in shelve db
    if documentsamples:
        handlenonexe(documentsamples)

    # Dispatch exe samples to cuckoo
    if exesamples:
        handleexe(exesamples)

    print("[+] Stored `strings` attributes in shelve DB and dispatched exe " + \
          "samples to cuckoo")
